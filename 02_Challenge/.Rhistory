install.packages("tidyverse")
setwd("~/Desktop/Data_Analytics_BootCamp/Challenge15_R_Analysis/02_Challenge")
mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) # read and store the data
View(mpg_table)
lm(qsec ~ hp,mtcars)
View(mpg_table)
lm(mpg ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' +  + hp,data=MechaCar) #generate multiple linear regression model
lm(mpg ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + 'AWD',data=mpg_table) #generate multiple linear regression model
lm(mpg ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + 'AWD',data=mpg_table)
lm('mpg' ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + 'AWD',data=mpg_table)
lm(mpg ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + AWD,data=mpg_table)
summary(lm('mpg' ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + 'AWD',data=mpg_table))
lm('mpg' ~ 'vehicle length', data=mpg_table)
mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) # read and store the data
lm('mpg' ~ 'vehicle length', data=mpg_table)
lm('mpg' ~ 'vehicle length', data=mpg)
mpg_table.info
lm('mpg' ~ 'vehicle length', data=MechaCar_mpg)
lm(mpg ~ AWD, data=mpg_table)
View(mpg_table)
lm(mpg ~ AWD +'vehicle length', data=mpg_table)
lm(mpg ~ AWD +wt, data=mpg_table)
lm(mpg ~ AWD +'vehicle length', data=mpg_table)
mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) # read and store the data
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
lm(mpg ~ 'vehicle.length' + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F, sep=",") # read and store the data
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
lm(mpg ~ vihicle length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
lm(mpg ~ 'vehicle.length' + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
mpg_table <- read.csv(file='MechaCar_mpg.csv', header = True, sep=",") # read and store the data
library(tidyverse)
mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) # read and store the data
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=mpg_table)
lm(mpg ~ 'vehicle length' + 'vehicle weight' + 'spoiler angle' + 'ground clearance' + AWD, data=mpg_table)
lm(mpg ~ 'vehicle length', data = mpg_table)
lm(mpg ~ vehicle_length, data = mpg_table)
lm(mpg ~ 'vehicle length'+'vehicle weight'+'spoiler angle'+'ground clearance', data = mpg_table)
lm(formula = mpg ~ 'vehicle length'+'vehicle weight'+'spoiler angle'+'ground clearance'+AWD, data = mpg_table)
head(mpg_table)
plt <- ggplot(mpg_table,aes(x=mpg,y='spoiler angle'))
View(plt)
plt <-ggplot(mpg_table,aes(x=vehicle_length,y=vehicle_weight))
View(plt)
View(plt)
View(plt)
MechaCar <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) # read and store the data
View(mpg_table)
View(MechaCar)
reg <- lm(mpg ~ vehicle.length, data=MechaCar)
View(MechaCar)
lm(mpg ~ vehicle.length, data=MechaCar)
lm(mpg ~ 'vehicle.length', data=MechaCar)
lm(formula=mpg ~ 'vehicle.length', data=MechaCar)
lm(formula=mpg ~ 'vehicle length', data=MechaCar)
lm(formula=mpg ~ AWD, data=MechaCar)
lm(formula=mpg ~ 'vehicle length', data=MechaCar)
MechaCar <- read.csv(file='MechaCar_mpg.csv',header=TRUE,sep=',')
View(MechaCar)
lm(mpg ~ vehicle.length, data=MechaCar)
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=MechaCar)
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data=MechaCar))
Suspension <- read.csv(file="Suspension_Coil.csv, header=TRUE, sep=',')
Suspension <- read.csv(file="Suspension_Coil.csv', header=TRUE, sep=',')
Suspension <- read.csv(file='Suspension_Coil.csv', header=TRUE, sep=',')
Suspension_table %>%
summarize(PSI_mean = mean(PSI),
PSI_median = median(PSI),
PSI_variance = var(PSI),
PSI_sd = sd(PSI))
Suspension %>%
summarize(PSI_mean = mean(PSI), PSI_median = median(PSI), PSI_variance = var(PSI), PSI_sd = sd(PSI))
View(Suspension)
Suspension %>%
group_by(Manufacturing_Lot) %>%
summarize(PSI_mean = mean(PSI),
PSI_median = median(PSI),
PSI_variance = var(PSI),
PSI_sd = sd(PSI))
sample_table1 <- Suspension %>% sample_n(50)
View(sample_table1)
sample_table2 <- Suspension %>% sample_n(50)
View(sample_table1)
View(sample_table2)
t.test(sample_table1$PSI, sample_table2$PSI) # Compare the means of two samples
t.test(Suspension_table$PSI, mu = 1500)
t.test(Suspension$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot1")$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot2")$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot3")$PSI, mu = 1500)
sample_table1 <- Suspension %>% sample_n(60)
sample_table2 <- Suspension %>% sample_n(60)
t.test(Suspension$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot1")$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot2")$PSI, mu = 1500)
t.test(subset(Suspension, Manufacturing_Lot == "Lot3")$PSI, mu = 1500)
t.test(sample_table1$PSI, sample_table2$PSI) # Compare the means of two samples
View(MechaCar)
View(Suspension)
View(MechaCar)
head(mtcars)
lm(mpg ~ hp, data = mtcars)
summary(lm(mpg ~ hp, data = mtcars))
lm(cyl ~ hp, data = mtcars)
summary(lm(cyl ~ hp, data = mtcars))
View(MechaCar)
